From 66f77830a8a3c48cb92b59c9926abc0373441052 Mon Sep 17 00:00:00 2001
From: Matthias Weber <matthias.weber@hs-augsburg.de>
Date: Mon, 9 Dec 2013 20:15:04 +0100
Subject: [PATCH] hsa-tple: Initial driver skeleton.

---
 configure.ac                  |   11 +++
 hardware/Makefile.am          |    5 ++
 hardware/hsa-tple/Makefile.am |   33 +++++++
 hardware/hsa-tple/api.c       |  191 +++++++++++++++++++++++++++++++++++++++++
 hardware/hsa-tple/protocol.c  |   40 +++++++++
 hardware/hsa-tple/protocol.h  |   51 +++++++++++
 hwdriver.c                    |    6 ++
 7 files changed, 337 insertions(+)
 create mode 100644 hardware/hsa-tple/Makefile.am
 create mode 100644 hardware/hsa-tple/api.c
 create mode 100644 hardware/hsa-tple/protocol.c
 create mode 100644 hardware/hsa-tple/protocol.h

diff --git a/configure.ac b/configure.ac
index 341873a..ec35c97 100644
--- a/configure.ac
+++ b/configure.ac
@@ -154,6 +154,15 @@ AC_ARG_ENABLE(hantek-dso, AC_HELP_STRING([--enable-hantek-dso],
 	[HW_HANTEK_DSO="$enableval"],
 	[HW_HANTEK_DSO=$HW_ENABLED_DEFAULT])
 
+AC_ARG_ENABLE(hsa-tple, AC_HELP_STRING([--enable-hsa-tple],
+	[enable hsa-tple support [default=yes]]),
+	[HW_HSA_TPLE="$enableval"],
+	[HW_HSA_TPLE=$HW_ENABLED_DEFAULT])
+AM_CONDITIONAL(HW_HSA_TPLE, test x$HW_HSA_TPLE = xyes)
+if test "x$HW_HSA_TPLE" = "xyes"; then
+	AC_DEFINE(HAVE_HW_HSA_TPLE, 1, [hsa-tple support])
+fi
+
 AC_ARG_ENABLE(ikalogic-scanalogic2, AC_HELP_STRING([--enable-ikalogic-scanalogic2],
 	[enable IKALOGIC Scanalogic-2 support [default=yes]]),
 	[HW_IKALOGIC_SCANALOGIC2="$enableval"],
@@ -559,6 +568,7 @@ AC_CONFIG_FILES([Makefile version.h hardware/Makefile
 		 hardware/common/Makefile
 		 hardware/gmc-mh-1x-2x/Makefile
 		 hardware/hameg-hmo/Makefile
+		 hardware/hsa-tple/Makefile
 		 hardware/ikalogic-scanalogic2/Makefile
 		 hardware/ikalogic-scanaplus/Makefile
 		 hardware/kecheng-kc-330b/Makefile
@@ -629,6 +639,7 @@ echo "  - fx2lafw......................... $HW_FX2LAFW"
 echo "  - gmc-mh-1x-2x.................... $HW_GMC_MH_1X_2X"
 echo "  - hameg-hmo....................... $HW_HAMEG_HMO"
 echo "  - hantek-dso...................... $HW_HANTEK_DSO"
+echo "  - hsa-tple........................ $HW_HSA_TPLE"
 echo "  - ikalogic-scanalogic2............ $HW_IKALOGIC_SCANALOGIC2"
 echo "  - ikalogic-scanaplus.............. $HW_IKALOGIC_SCANAPLUS"
 echo "  - kecheng-kc-330b................. $HW_KECHENG_KC_330B"
diff --git a/hardware/Makefile.am b/hardware/Makefile.am
index 19a6347..8cdba48 100644
--- a/hardware/Makefile.am
+++ b/hardware/Makefile.am
@@ -34,6 +34,7 @@ SUBDIRS = \
 	gmc-mh-1x-2x \
 	hameg-hmo \
 	hantek-dso \
+	hsa-tple \
 	ikalogic-scanalogic2 \
 	ikalogic-scanaplus \
 	kecheng-kc-330b \
@@ -115,6 +116,10 @@ if HW_HANTEK_DSO
 libsigrokhardware_la_LIBADD += hantek-dso/libsigrok_hw_hantek_dso.la
 endif
 
+if HW_HSA_TPLE
+libsigrokhardware_la_LIBADD += hsa-tple/libsigrok_hw_hsa_tple.la
+endif
+
 if HW_IKALOGIC_SCANALOGIC2
 libsigrokhardware_la_LIBADD += ikalogic-scanalogic2/libsigrok_hw_ikalogic_scanalogic2.la
 endif
diff --git a/hardware/hsa-tple/Makefile.am b/hardware/hsa-tple/Makefile.am
new file mode 100644
index 0000000..e1e153a
--- /dev/null
+++ b/hardware/hsa-tple/Makefile.am
@@ -0,0 +1,33 @@
+##
+## This file is part of the libsigrok project.
+##
+## Copyright (C) 2013 Matthias Weber <matthias.weber@hs-augsburg.de>
+##
+## This program is free software: you can redistribute it and/or modify
+## it under the terms of the GNU General Public License as published by
+## the Free Software Foundation, either version 3 of the License, or
+## (at your option) any later version.
+##
+## This program is distributed in the hope that it will be useful,
+## but WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with this program.  If not, see <http://www.gnu.org/licenses/>.
+##
+
+if HW_HSA_TPLE
+
+# Local lib, this is NOT meant to be installed!
+noinst_LTLIBRARIES = libsigrok_hw_hsa_tple.la
+
+libsigrok_hw_hsa_tple_la_SOURCES = \
+	api.c \
+	protocol.c \
+	protocol.h
+
+libsigrok_hw_hsa_tple_la_CFLAGS = \
+	-I$(top_srcdir)
+
+endif
diff --git a/hardware/hsa-tple/api.c b/hardware/hsa-tple/api.c
new file mode 100644
index 0000000..96835ed
--- /dev/null
+++ b/hardware/hsa-tple/api.c
@@ -0,0 +1,191 @@
+/*
+ * This file is part of the libsigrok project.
+ *
+ * Copyright (C) 2013 Matthias Weber <matthias.weber@hs-augsburg.de>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include "protocol.h"
+
+SR_PRIV struct sr_dev_driver hsa_tple_driver_info;
+static struct sr_dev_driver *di = &hsa_tple_driver_info;
+
+static int init(struct sr_context *sr_ctx)
+{
+	return std_init(sr_ctx, di, LOG_PREFIX);
+}
+
+static GSList *scan(GSList *options)
+{
+	struct drv_context *drvc;
+	GSList *devices;
+
+	(void)options;
+
+	devices = NULL;
+	drvc = di->priv;
+	drvc->instances = NULL;
+
+	/* TODO: scan for devices, either based on a SR_CONF_CONN option
+	 * or on a USB scan. */
+
+	return devices;
+}
+
+static GSList *dev_list(void)
+{
+	return ((struct drv_context *)(di->priv))->instances;
+}
+
+static int dev_clear(void)
+{
+	return std_dev_clear(di, NULL);
+}
+
+static int dev_open(struct sr_dev_inst *sdi)
+{
+	(void)sdi;
+
+	/* TODO: get handle from sdi->conn and open it. */
+
+	sdi->status = SR_ST_ACTIVE;
+
+	return SR_OK;
+}
+
+static int dev_close(struct sr_dev_inst *sdi)
+{
+	(void)sdi;
+
+	/* TODO: get handle from sdi->conn and close it. */
+
+	sdi->status = SR_ST_INACTIVE;
+
+	return SR_OK;
+}
+
+static int cleanup(void)
+{
+	dev_clear();
+
+	/* TODO: free other driver resources, if any. */
+
+	return SR_OK;
+}
+
+static int config_get(int key, GVariant **data, const struct sr_dev_inst *sdi,
+		const struct sr_probe_group *probe_group)
+{
+	int ret;
+
+	(void)sdi;
+	(void)data;
+	(void)probe_group;
+
+	ret = SR_OK;
+	switch (key) {
+	/* TODO */
+	default:
+		return SR_ERR_NA;
+	}
+
+	return ret;
+}
+
+static int config_set(int key, GVariant *data, const struct sr_dev_inst *sdi,
+		const struct sr_probe_group *probe_group)
+{
+	int ret;
+
+	(void)data;
+	(void)probe_group;
+
+	if (sdi->status != SR_ST_ACTIVE)
+		return SR_ERR_DEV_CLOSED;
+
+	ret = SR_OK;
+	switch (key) {
+	/* TODO */
+	default:
+		ret = SR_ERR_NA;
+	}
+
+	return ret;
+}
+
+static int config_list(int key, GVariant **data, const struct sr_dev_inst *sdi,
+		const struct sr_probe_group *probe_group)
+{
+	int ret;
+
+	(void)sdi;
+	(void)data;
+	(void)probe_group;
+
+	ret = SR_OK;
+	switch (key) {
+	/* TODO */
+	default:
+		return SR_ERR_NA;
+	}
+
+	return ret;
+}
+
+static int dev_acquisition_start(const struct sr_dev_inst *sdi,
+				    void *cb_data)
+{
+	(void)sdi;
+	(void)cb_data;
+
+	if (sdi->status != SR_ST_ACTIVE)
+		return SR_ERR_DEV_CLOSED;
+
+	/* TODO: configure hardware, reset acquisition state, set up
+	 * callbacks and send header packet. */
+
+	return SR_OK;
+}
+
+static int dev_acquisition_stop(struct sr_dev_inst *sdi, void *cb_data)
+{
+	(void)cb_data;
+
+	if (sdi->status != SR_ST_ACTIVE)
+		return SR_ERR_DEV_CLOSED;
+
+	/* TODO: stop acquisition. */
+
+	return SR_OK;
+}
+
+SR_PRIV struct sr_dev_driver hsa_tple_driver_info = {
+	.name = "hsa-tple",
+	.longname = "hsa-tple",
+	.api_version = 1,
+	.init = init,
+	.cleanup = cleanup,
+	.scan = scan,
+	.dev_list = dev_list,
+	.dev_clear = dev_clear,
+	.config_get = config_get,
+	.config_set = config_set,
+	.config_list = config_list,
+	.dev_open = dev_open,
+	.dev_close = dev_close,
+	.dev_acquisition_start = dev_acquisition_start,
+	.dev_acquisition_stop = dev_acquisition_stop,
+	.priv = NULL,
+};
diff --git a/hardware/hsa-tple/protocol.c b/hardware/hsa-tple/protocol.c
new file mode 100644
index 0000000..858b53d
--- /dev/null
+++ b/hardware/hsa-tple/protocol.c
@@ -0,0 +1,40 @@
+/*
+ * This file is part of the libsigrok project.
+ *
+ * Copyright (C) 2013 Matthias Weber <matthias.weber@hs-augsburg.de>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include "protocol.h"
+
+SR_PRIV int hsa_tple_receive_data(int fd, int revents, void *cb_data)
+{
+	const struct sr_dev_inst *sdi;
+	struct dev_context *devc;
+
+	(void)fd;
+
+	if (!(sdi = cb_data))
+		return TRUE;
+
+	if (!(devc = sdi->priv))
+		return TRUE;
+
+	if (revents == G_IO_IN) {
+		/* TODO */
+	}
+
+	return TRUE;
+}
diff --git a/hardware/hsa-tple/protocol.h b/hardware/hsa-tple/protocol.h
new file mode 100644
index 0000000..8881edd
--- /dev/null
+++ b/hardware/hsa-tple/protocol.h
@@ -0,0 +1,51 @@
+/*
+ * This file is part of the libsigrok project.
+ *
+ * Copyright (C) 2013 Matthias Weber <matthias.weber@hs-augsburg.de>
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef LIBSIGROK_HARDWARE_HSA_TPLE_PROTOCOL_H
+#define LIBSIGROK_HARDWARE_HSA_TPLE_PROTOCOL_H
+
+#include <stdint.h>
+#include <glib.h>
+#include "libsigrok.h"
+#include "libsigrok-internal.h"
+
+/* Message logging helpers with subsystem-specific prefix string. */
+#define LOG_PREFIX "hsa-tple: "
+#define sr_log(l, s, args...) sr_log(l, LOG_PREFIX s, ## args)
+#define sr_spew(s, args...) sr_spew(LOG_PREFIX s, ## args)
+#define sr_dbg(s, args...) sr_dbg(LOG_PREFIX s, ## args)
+#define sr_info(s, args...) sr_info(LOG_PREFIX s, ## args)
+#define sr_warn(s, args...) sr_warn(LOG_PREFIX s, ## args)
+#define sr_err(s, args...) sr_err(LOG_PREFIX s, ## args)
+
+/** Private, per-device-instance driver context. */
+struct dev_context {
+	/* Model-specific information */
+
+	/* Acquisition settings */
+
+	/* Operational state */
+
+	/* Temporary state across callbacks */
+
+};
+
+SR_PRIV int hsa_tple_receive_data(int fd, int revents, void *cb_data);
+
+#endif
diff --git a/hwdriver.c b/hwdriver.c
index 9205834..dc0baa3 100644
--- a/hwdriver.c
+++ b/hwdriver.c
@@ -129,6 +129,9 @@ extern SR_PRIV struct sr_dev_driver gmc_mh_1x_2x_rs232_driver_info;
 #ifdef HAVE_HW_HAMEG_HMO
 extern SR_PRIV struct sr_dev_driver hameg_hmo_driver_info;
 #endif
+#ifdef HAVE_HW_HSA_TPLE
+extern SR_PRIV struct sr_dev_driver hsa_tple_driver_info;
+#endif
 #ifdef HAVE_HW_IKALOGIC_SCANALOGIC2
 extern SR_PRIV struct sr_dev_driver ikalogic_scanalogic2_driver_info;
 #endif
@@ -258,6 +261,9 @@ static struct sr_dev_driver *drivers_list[] = {
 #ifdef HAVE_HW_HAMEG_HMO
 	&hameg_hmo_driver_info,
 #endif
+#ifdef HAVE_HW_HSA_TPLE
+	&hsa_tple_driver_info,
+#endif
 #ifdef HAVE_HW_IKALOGIC_SCANALOGIC2
 	&ikalogic_scanalogic2_driver_info,
 #endif
-- 
1.7.9.5

